test compile precise-output
target x86_64

function %f1(f32) -> f32 {
block0(v0: f32):
  v1 = fneg v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov eax, 0x80000000
;   movd xmm4, eax
;   xorps xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov eax, 0x80000000
;   movd xmm4, eax
;   xorps xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f2(f64) -> f64 {
block0(v0: f64):
  v1 = fneg v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movabs rax, 0x8000000000000000
;   movq xmm4, rax
;   xorpd xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movabs rax, 0x8000000000000000
;   movq xmm4, rax
;   xorpd xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f3(f32x4) -> f32x4 {
block0(v0: f32x4):
  v1 = fneg v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   uninit xmm4
;   pcmpeqd xmm4, xmm4, xmm4
;   pslld xmm4, xmm4, $31
;   xorps xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   pcmpeqd xmm4, xmm4
;   pslld xmm4, 0x1f
;   xorps xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f4(f64x2) -> f64x2 {
block0(v0: f64x2):
  v1 = fneg v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   uninit xmm4
;   pcmpeqd xmm4, xmm4, xmm4
;   psllq xmm4, xmm4, $63
;   xorpd xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   pcmpeqd xmm4, xmm4
;   psllq xmm4, 0x3f
;   xorpd xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

