test compile precise-output
target x86_64

function %f0(i32, i32, i64, i64) -> i64 {
block0(v0: i32, v1: i32, v2: i64, v3: i64):
    v4 = icmp eq v0, v1
    v5 = uextend.i32 v4
    v6 = select.i64 v5, v2, v3
    return v6
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   cmp edi, esi
;   mov rax, rcx
;   cmovz rax, rdx, rax
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   cmp edi, esi
;   mov rax, rcx
;   cmove rax, rdx
;   mov rsp, rbp
;   pop rbp
;   ret

function %f0(f32, f32, i64, i64) -> i64 {
block0(v0: f32, v1: f32, v2: i64, v3: i64):
    v4 = fcmp eq v0, v1
    v5 = uextend.i32 v4
    v6 = select.i64 v5, v2, v3
    return v6
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   ucomiss xmm0, xmm1
;   mov rax, rdi
;   cmovp rax, rsi, rax
;   cmovnz rax, rsi, rax
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   ucomiss xmm0, xmm1
;   mov rax, rdi
;   cmovp rax, rsi
;   cmovne rax, rsi
;   mov rsp, rbp
;   pop rbp
;   ret

