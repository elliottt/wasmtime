test compile precise-output
target x86_64

function %f1(f32) -> f32 {
block0(v0: f32):
  v1 = fabs v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov eax, 0x7fffffff
;   movd xmm4, eax
;   andps xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov eax, 0x7fffffff
;   movd xmm4, eax
;   andps xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f2(f64) -> f64 {
block0(v0: f64):
  v1 = fabs v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movabs rax, 0x7fffffffffffffff
;   movq xmm4, rax
;   andpd xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movabs rax, 0x7fffffffffffffff
;   movq xmm4, rax
;   andpd xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f3(f32x4) -> f32x4 {
block0(v0: f32x4):
  v1 = fabs v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   uninit xmm4
;   pcmpeqd xmm4, xmm4, xmm4
;   psrld xmm4, xmm4, $1
;   andps xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   pcmpeqd xmm4, xmm4
;   psrld xmm4, 1
;   andps xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f4(f64x2) -> f64x2 {
block0(v0: f64x2):
  v1 = fabs v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   uninit xmm4
;   pcmpeqd xmm4, xmm4, xmm4
;   psrlq xmm4, xmm4, $1
;   andpd xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   pcmpeqd xmm4, xmm4
;   psrlq xmm4, 1
;   andpd xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

