test compile precise-output
set enable_simd
target x86_64 has_avx

function %f3(i32) -> f32 {
block0(v0: i32):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   vcvtsi2ss xmm0, edi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   vcvtsi2ss xmm0, xmm0, edi
;   mov rsp, rbp
;   pop rbp
;   ret

function %f4(i64) -> f32 {
block0(v0: i64):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   vcvtsi2ss xmm0, rdi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   vcvtsi2ss xmm0, xmm0, rdi
;   mov rsp, rbp
;   pop rbp
;   ret

function %f7(i32) -> f64 {
block0(v0: i32):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   vcvtsi2sd xmm0, edi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   vcvtsi2sd xmm0, xmm0, edi
;   mov rsp, rbp
;   pop rbp
;   ret

function %f8(i64) -> f64 {
block0(v0: i64):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   vcvtsi2sd xmm0, rdi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   vcvtsi2sd xmm0, xmm0, rdi
;   mov rsp, rbp
;   pop rbp
;   ret

