test compile precise-output
target x86_64

function %f(f64) -> f64 {
block0(v0: f64):
    v1 = fabs.f64 v0
    return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movabs rax, 0x7fffffffffffffff
;   movq xmm4, rax
;   andpd xmm0, xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movabs rax, 0x7fffffffffffffff
;   movq xmm4, rax
;   andpd xmm0, xmm4
;   mov rsp, rbp
;   pop rbp
;   ret

function %f(i64) -> f64 {
block0(v0: i64):
    v1 = load.f64 v0
    v2 = fabs.f64 v1
    return v2
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movsd xmm0, qword ptr [rdi + 0x0]
;   movabs rcx, 0x7fffffffffffffff
;   movq xmm5, rcx
;   andpd xmm0, xmm0, xmm5
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movsd xmm0, qword ptr [rdi] ; trap: heap_oob
;   movabs rcx, 0x7fffffffffffffff
;   movq xmm5, rcx
;   andpd xmm0, xmm5
;   mov rsp, rbp
;   pop rbp
;   ret

