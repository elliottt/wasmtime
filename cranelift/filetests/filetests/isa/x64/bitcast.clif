test compile precise-output
target x86_64

function %f1(f32) -> i32 {
block0(v0: f32):
  v1 = bitcast.i32 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movd eax, xmm0
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movd eax, xmm0
;   mov rsp, rbp
;   pop rbp
;   ret

function %f2(i32) -> f32 {
block0(v0: i32):
  v1 = bitcast.f32 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movd xmm0, edi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movd xmm0, edi
;   mov rsp, rbp
;   pop rbp
;   ret

function %f3(f64) -> i64 {
block0(v0: f64):
  v1 = bitcast.i64 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movq rax, xmm0
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movq rax, xmm0
;   mov rsp, rbp
;   pop rbp
;   ret

function %f4(i64) -> f64 {
block0(v0: i64):
  v1 = bitcast.f64 v0
  return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movq xmm0, rdi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movq xmm0, rdi
;   mov rsp, rbp
;   pop rbp
;   ret

