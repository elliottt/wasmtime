test compile precise-output
target x86_64

function %f1(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov rax, rdi
;   cbw al, al
;   test sil, sil
;   jz #trap=int_divz
;   idiv al, sil, al ; trap=int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov rax, rdi
;   cbw
;   test sil, sil
;   je 0x1a
;   idiv sil ; trap: int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
;   ud2 ; trap: int_divz

function %f2(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov rax, rdi
;   cwd dx, ax
;   test si, si
;   jz #trap=int_divz
;   idiv ax, dx, ax, dx, si ; trap=int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov rax, rdi
;   cwd
;   test si, si
;   je 0x1a
;   idiv si ; trap: int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
;   ud2 ; trap: int_divz

function %f3(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov rax, rdi
;   cdq edx, eax
;   test esi, esi
;   jz #trap=int_divz
;   idiv eax, edx, eax, edx, esi ; trap=int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov rax, rdi
;   cdq
;   test esi, esi
;   je 0x17
;   idiv esi ; trap: int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
;   ud2 ; trap: int_divz

function %f4(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov rax, rdi
;   cqo rdx, rax
;   test rsi, rsi
;   jz #trap=int_divz
;   idiv rax, rdx, rax, rdx, rsi ; trap=int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov rax, rdi
;   cqo
;   test rsi, rsi
;   je 0x1a
;   idiv rsi ; trap: int_ovf
;   mov rsp, rbp
;   pop rbp
;   ret
;   ud2 ; trap: int_divz

