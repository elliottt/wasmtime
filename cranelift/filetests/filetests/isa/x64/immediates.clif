test compile precise-output
target x86_64

function %f0(i64, i64) {
block0(v0: i64, v1: i64):
  v2 = iconst.i64 0xffff_eeee_dddd_cccc
  v3 = iadd.i64 v0, v2
  store v3, v1
  v4 = isub.i64 v0, v2
  store v4, v1
  v5 = band.i64 v0, v2
  store v5, v1
  v6 = bor.i64 v0, v2
  store v6, v1
  return
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   movabs r10, 0xffffeeeeddddcccc
;   lea r10, qword ptr [rdi + r10]
;   mov qword ptr [rsi + 0x0], r10
;   mov r11, rdi
;   sub r11, r11, const(0)
;   mov qword ptr [rsi + 0x0], r11
;   mov rax, rdi
;   and rax, rax, const(0)
;   mov qword ptr [rsi + 0x0], rax
;   or rdi, rdi, const(0)
;   mov qword ptr [rsi + 0x0], rdi
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   movabs r10, 0xffffeeeeddddcccc
;   add r10, rdi
;   mov qword ptr [rsi], r10 ; trap: heap_oob
;   mov r11, rdi
;   sub r11, qword ptr [rip + 0x22]
;   mov qword ptr [rsi], r11 ; trap: heap_oob
;   mov rax, rdi
;   and rax, qword ptr [rip + 0x15]
;   mov qword ptr [rsi], rax ; trap: heap_oob
;   or rdi, qword ptr [rip + 0xb]
;   mov qword ptr [rsi], rdi ; trap: heap_oob
;   mov rsp, rbp
;   pop rbp
;   ret
;   add byte ptr [rax], al
;   add ah, cl
;   int3
;   fstp st(5)
;   out dx, al
;   out dx, al

