test compile precise-output
set enable_safepoints=true
set enable_table_access_spectre_mitigation=true

target x86_64

function %table_set(i32, r64, i64 vmctx) {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0
    gv2 = load.i32 notrap aligned gv0 +8
    table0 = dynamic gv1, element_size 1, bound gv2, index_type i32

block0(v0: i32, v1: r64, v2: i64):
    v3 = table_addr.i64 table0, v0+0
    store.r64 notrap aligned v1, v3
    return
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   mov r11d, dword ptr [rdx + 0x8]
;   cmp edi, r11d
;   jnb label2; j label1
; block1:
;   mov ecx, edi
;   mov rax, qword ptr [rdx + 0x0]
;   lea rcx, qword ptr [rax + rcx]
;   cmp edi, r11d
;   cmovnb rcx, rax, rcx
;   mov qword ptr [rcx + 0x0], rsi
;   mov rsp, rbp
;   pop rbp
;   ret
; block2:
;   ud2 table_oob
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   mov r11d, dword ptr [rdx + 8]
;   cmp edi, r11d
;   jae 0x28
; block2: ; offset 0x11
;   mov ecx, edi
;   mov rax, qword ptr [rdx]
;   add rcx, rax
;   cmp edi, r11d
;   cmovae rcx, rax
;   mov qword ptr [rcx], rsi
;   mov rsp, rbp
;   pop rbp
;   ret
; block3: ; offset 0x28
;   ud2 ; trap: table_oob

