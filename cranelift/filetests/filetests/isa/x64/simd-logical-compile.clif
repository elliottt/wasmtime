test compile precise-output
set enable_simd
target x86_64

function %bnot_i32x4(i32x4) -> i32x4 {
block0(v0: i32x4):
    v1 = bnot v0
    return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   uninit xmm3
;   pcmpeqd xmm3, xmm3, xmm3
;   pxor xmm0, xmm0, xmm3
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   pcmpeqd xmm3, xmm3
;   pxor xmm0, xmm3
;   mov rsp, rbp
;   pop rbp
;   ret

function %vany_true_i32x4(i32x4) -> i8 {
block0(v0: i32x4):
    v1 = vany_true v0
    return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   ptest xmm0, xmm0
;   setnz al
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   ptest xmm0, xmm0
;   setne al
;   mov rsp, rbp
;   pop rbp
;   ret

function %vall_true_i64x2(i64x2) -> i8 {
block0(v0: i64x2):
    v1 = vall_true v0
    return v1
}

; VCode:
;   push rbp
;   mov rbp, rsp
; block0:
;   uninit xmm3
;   pxor xmm3, xmm3, xmm3
;   movdqa xmm6, xmm0
;   pcmpeqq xmm6, xmm6, xmm3
;   ptest xmm6, xmm6
;   setz al
;   mov rsp, rbp
;   pop rbp
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   push rbp
;   mov rbp, rsp
; block1: ; offset 0x4
;   pxor xmm3, xmm3
;   movdqa xmm6, xmm0
;   pcmpeqq xmm6, xmm3
;   ptest xmm6, xmm6
;   sete al
;   mov rsp, rbp
;   pop rbp
;   ret

